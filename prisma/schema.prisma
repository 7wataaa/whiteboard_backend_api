// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id             String    @id @default(uuid()) @db.Uuid
  email          String    @unique
  username       String
  hashedPassword String    @map("hashed_password")
  createdAt      DateTime  @default(now()) @map("created_at")
  deletedAt      DateTime? @map("deleted_at")
  updatedAt      DateTime  @default(now()) @map("updated_at")
  role           Role      @default(USER)
  rooms          Room[]
  tokens         Token[]

  @@map("user")
}

model Token {
  id           String   @id @default(uuid()) @db.Uuid
  user         User     @relation(fields: [userId], references: [id])
  userId       String   @map("user_id") @db.Uuid
  loginToken   String   @map("login_token")
  refreshToken String   @map("refresh_token")
  createdAt    DateTime @default(now()) @map("created_at")

  @@map("token")
}

enum Role {
  USER
  ADMIN

  @@map("role")
}

model Room {
  id             String    @id @default(uuid()) @db.Uuid
  joinedUsers    User[]
  name           String
  createdAt      DateTime  @default(now()) @map("created_at")
  updateAt       DateTime  @default(now()) @map("update_at")
  deletedAt      DateTime? @map("deleted_at")
  Post           Post[]
  invitePassword String

  @@map("room")
}

model Post {
  id        String    @id @default(uuid()) @db.Uuid
  authorId  String    @db.Uuid
  roomId    String    @db.Uuid
  room      Room      @relation(fields: [roomId], references: [id])
  createdAt DateTime  @default(now()) @map("created_at")
  updateAt  DateTime  @default(now()) @map("update_at")
  deletedAt DateTime? @map("deleted_at")

  @@map("post")
}
